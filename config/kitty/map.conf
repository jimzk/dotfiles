# Documentation https://sw.kovidgoyal.net/kitty/actions/
# https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.macos_option_as_alt
macos_option_as_alt yes
# Specified
map cmd+b remote_control send-text --match recent:1 cargo build\\n
# Tab
map cmd+. set_tab_title
map cmd+t new_tab_with_cwd
map cmd+shift+t new_tab
map cmd+] next_tab
map cmd+[ previous_tab
map shift+cmd+] move_tab_forward
map shift+cmd+[ move_tab_backward
# map cmd+o next_tab
# map cmd+i previous_tab
# map shift+cmd+o move_tab_forward
# map shift+cmd+i move_tab_backward
map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9
map cmd+0 goto_tab 99
map cmd+enter toggle_fullscreen
map shift+cmd+space toggle_maximized

# Windows
map cmd+e next_window
map cmd+w close_window
map cmd+d launch --location=vsplit --cwd=current
map cmd+shift+d launch --location=hsplit --cwd=current
map cmd+shift+f move_window_forward
map cmd+shift+b move_window_backward
# Seamlessly focus and resize windows with neovim
# https://github.com/mrjones2014/smart-splits.nvim#kitty
map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l
map ctrl+shift+j kitten pass_keys.py relative_resize down  3 ctrl+shift+j
map ctrl+shift+k kitten pass_keys.py relative_resize up    3 ctrl+shift+k
map ctrl+shift+h kitten pass_keys.py relative_resize left  3 ctrl+shift+h
map ctrl+shift+l kitten pass_keys.py relative_resize right 3 ctrl+shift+l
allow_remote_control yes
listen_on unix:/tmp/mykitty
# Distinguish C-S-J and C-J in neovim for window swap
# https://www.reddit.com/r/neovim/comments/mbj8m5/how_to_setup_ctrlshiftkey_mappings_in_neovim_and
# map ctrl+shift+h send_text all \x1b[72;5u
# map ctrl+shift+j send_text all \x1b[74;5u
# map ctrl+shift+k send_text all \x1b[75;5u
# map ctrl+shift+l send_text all \x1b[76;5u

# OS Windows
map cmd+n new_os_window_with_cwd
map shift+cmd+w close_os_window
# Detach
map cmd+g detach_window ask
# map cmd+shift+n detach_tab ask

# Appearance
map cmd+shift+l next_layout
map cmd+l toggle_layout stack
map cmd+shift+minus set_background_opacity -0.02
map cmd+shift+equal set_background_opacity +0.02
map cmd+shift+0 set_background_opacity 1
map cmd+equal change_font_size all +1.0
map cmd+minus change_font_size all -1.0
map cmd+0 change_font_size all 0

# Scroll
map cmd+up scroll_line_up
map cmd+down scroll_line_down
map shift+cmd+p scroll_to_prompt -1
map shift+cmd+n scroll_to_prompt 1


# Select or open text
# Open url
map cmd+e open_url_with_hints
# Insert selected path
map cmd+p>f kitten hints --type path --program -
# Open selected path
map cmd+p>shift+f kitten hints --type path
# Insert selected line
map cmd+p>l kitten hints --type line --program -
# Insert selected word
map cmd+p>w kitten hints --type word --program -
# Insert selected hash
map cmd+p>h kitten hints --type hash --program -
# Open the selected file at the selected line
map cmd+p>n kitten hints --type linenum
# Open the selected hyperlink
map cmd+p>y kitten hints --type hyperlink

# Config
map cmd+f1 show_kitty_doc overview
map opt+cmd+, debug_config
map cmd+, launch --cwd=~/.config/kitty nvim kitty.conf
map ctrl+cmd+, load_config_file
# MISC
map ctrl+shift+g show_last_command_output
map f1 launch --type=tab --cwd=current nvim
